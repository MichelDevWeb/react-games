{"version":3,"sources":["layouts/MainLayout.jsx","modules/2048/helper/index.js","modules/2048/hooks/useEvent.js","modules/2048/components/Cell.jsx","modules/2048/assets/images/try-again.gif","modules/2048/components/GameOverlay.jsx","modules/2048/components/Tile.jsx","modules/2048/components/Board.jsx","modules/2048/pages/MainPage.jsx","modules/quiz-trivia/components/Start.jsx","modules/quiz-trivia/components/Timer.jsx","modules/quiz-trivia/sounds/play.mp3","modules/quiz-trivia/sounds/correct.mp3","modules/quiz-trivia/sounds/wrong.mp3","modules/quiz-trivia/components/Trivia.jsx","modules/quiz-trivia/pages/QuizTrivia.jsx","routes.js","App.jsx","index.js"],"names":["MainLayout","rotateLeft","matrix","rows","length","columns","res","row","push","column","Tile","value","this","oldRow","oldColumn","markForDeletion","mergedInto","id","fromRow","toRow","fromColumn","toColumn","Board","tiles","cells","score","size","fourProbability","deltaX","deltaY","i","addTile","addRandomTile","setPositions","won","args","hasChanged","currentRow","filter","tile","resultRow","target","targetTile","shift","tile1","tile2","forEach","rowIndex","columnIndex","emptyCells","r","c","cell","Math","random","newValue","direction","clearOldTiles","moveLeft","canMove","dir","newRow","newColumn","useEvent","event","handler","passive","useEffect","window","addEventListener","removeEventListener","Cell","className","GameOverlay","onRestart","board","hasWon","hasLost","onClick","src","TryAgainLogo","alt","style","width","height","cursor","classArray","isNew","hasMoved","classes","join","BoardView","useState","setBoard","keyCode","newBoard","Object","assign","create","getPrototypeOf","move","resetGame","map","col","colIndex","index","MainPage","Start","setUsername","inputRef","useRef","placeholder","ref","current","Timer","setTimeOut","questionNumber","timer","setTimer","interval","setInterval","prev","clearInterval","Trivia","data","setQuestionNumber","question","setQuestion","selectedAnswer","setSelectedAnswer","setClassName","useSound","play","letsPlay","correct","correctAnswer","wrong","wrongAnswer","delay","duration","callback","setTimeout","answers","a","handleClick","text","QuizTrivia","username","timeOut","earned","setEarned","moneyPyramid","useMemo","amount","reverse","find","m","Router","useRoutes","path","element","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44821bea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst MainLayout = () => {\r\n  return (\r\n    <div>MainLayout</div>\r\n  )\r\n}\r\n\r\nexport default MainLayout","var rotateLeft = function (matrix) {\n  var rows = matrix.length;\n  var columns = matrix[0].length;\n  var res = [];\n  for (var row = 0; row < rows; ++row) {\n    res.push([]);\n    for (var column = 0; column < columns; ++column) {\n      res[row][column] = matrix[column][columns - row - 1];\n    }\n  }\n  return res;\n};\n\nclass Tile {\n  constructor(value, row, column) {\n    this.value = value || 0;\n    this.row = row || -1;\n    this.column = column || -1;\n    this.oldRow = -1;\n    this.oldColumn = -1;\n    this.markForDeletion = false;\n    this.mergedInto = null;\n    this.id = this.id++ || 0;\n  }\n  moveTo(row, column) {\n    this.oldRow = this.row;\n    this.oldColumn = this.column;\n    this.row = row;\n    this.column = column;\n  }\n  isNew() {\n    return this.oldRow === -1 && !this.mergedInto;\n  }\n  hasMoved() {\n    return (\n      (this.fromRow() !== -1 &&\n        (this.fromRow() !== this.toRow() ||\n          this.fromColumn() !== this.toColumn())) ||\n      this.mergedInto\n    );\n  }\n  fromRow() {\n    return this.mergedInto ? this.row : this.oldRow;\n  }\n  fromColumn() {\n    return this.mergedInto ? this.column : this.oldColumn;\n  }\n  toRow() {\n    return this.mergedInto ? this.mergedInto.row : this.row;\n  }\n  toColumn() {\n    return this.mergedInto ? this.mergedInto.column : this.column;\n  }\n}\n\nclass Board {\n  constructor() {\n    this.tiles = [];\n    this.cells = [];\n    this.score = 0;\n    this.size = 4;\n    this.fourProbability = 0.1;\n    this.deltaX = [-1, 0, 1, 0];\n    this.deltaY = [0, -1, 0, 1];\n    for (var i = 0; i < this.size; ++i) {\n      this.cells[i] = [\n        this.addTile(),\n        this.addTile(),\n        this.addTile(),\n        this.addTile(),\n      ];\n    }\n    this.addRandomTile();\n    this.addRandomTile();\n    this.setPositions();\n    this.won = false;\n  }\n  addTile(args) {\n    var res = new Tile(args);\n    this.tiles.push(res);\n    return res;\n  }\n\n  moveLeft() {\n    var hasChanged = false;\n    for (var row = 0; row < this.size; ++row) {\n      var currentRow = this.cells[row].filter((tile) => tile.value !== 0);\n      var resultRow = [];\n      for (var target = 0; target < this.size; ++target) {\n        var targetTile = currentRow.length\n          ? currentRow.shift()\n          : this.addTile();\n        if (currentRow.length > 0 && currentRow[0].value === targetTile.value) {\n          var tile1 = targetTile;\n          targetTile = this.addTile(targetTile.value);\n          tile1.mergedInto = targetTile;\n          var tile2 = currentRow.shift();\n          tile2.mergedInto = targetTile;\n          targetTile.value += tile2.value;\n          this.score += tile1.value + tile2.value;\n        }\n        resultRow[target] = targetTile;\n        this.won |= targetTile.value === 2048;\n        hasChanged |= targetTile.value !== this.cells[row][target].value;\n      }\n      this.cells[row] = resultRow;\n    }\n    return hasChanged;\n  }\n  setPositions() {\n    this.cells.forEach((row, rowIndex) => {\n      row.forEach((tile, columnIndex) => {\n        tile.oldRow = tile.row;\n        tile.oldColumn = tile.column;\n        tile.row = rowIndex;\n        tile.column = columnIndex;\n        tile.markForDeletion = false;\n      });\n    });\n  }\n  addRandomTile() {\n    var emptyCells = [];\n    for (var r = 0; r < this.size; ++r) {\n      for (var c = 0; c < this.size; ++c) {\n        if (this.cells[r][c].value === 0) {\n          emptyCells.push({ r: r, c: c });\n        }\n      }\n    }\n    var index = ~~(Math.random() * emptyCells.length);\n    var cell = emptyCells[index];\n    var newValue = Math.random() < this.fourProbability ? 4 : 2;\n    this.cells[cell.r][cell.c] = this.addTile(newValue);\n  }\n  move(direction) {\n    // 0 -> left, 1 -> up, 2 -> right, 3 -> down\n    this.clearOldTiles();\n    for (var i = 0; i < direction; ++i) {\n      this.cells = rotateLeft(this.cells);\n    }\n    var hasChanged = this.moveLeft();\n    for (let i = direction; i < 4; ++i) {\n      this.cells = rotateLeft(this.cells);\n    }\n    if (hasChanged) {\n      this.addRandomTile();\n    }\n    this.setPositions();\n    return this;\n  }\n  clearOldTiles() {\n    this.tiles = this.tiles.filter((tile) => tile.markForDeletion === false);\n    this.tiles.forEach((tile) => {\n      tile.markForDeletion = true;\n    });\n  }\n  hasWon() {\n    return this.won;\n  }\n  hasLost() {\n    var canMove = false;\n    for (var row = 0; row < this.size; ++row) {\n      for (var column = 0; column < this.size; ++column) {\n        canMove |= this.cells[row][column].value === 0;\n        for (var dir = 0; dir < 4; ++dir) {\n          var newRow = row + this.deltaX[dir];\n          var newColumn = column + this.deltaY[dir];\n          if (\n            newRow < 0 ||\n            newRow >= this.size ||\n            newColumn < 0 ||\n            newColumn >= this.size\n          ) {\n            continue;\n          }\n          canMove |=\n            this.cells[row][column].value ===\n            this.cells[newRow][newColumn].value;\n        }\n      }\n    }\n    return !canMove;\n  }\n}\n\nexport { Board };\n","import { useEffect } from \"react\";\r\n\r\nconst useEvent = (event, handler, passive = false) => {\r\n  useEffect(() => {\r\n    window.addEventListener(event, handler, passive);\r\n\r\n    return () => {\r\n      window.removeEventListener(event, handler, passive);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useEvent;\r\n","import React from \"react\";\r\n\r\nconst Cell = () => {\r\n  return <span className=\"cell\"></span>;\r\n};\r\n\r\nexport default Cell;\r\n","export default __webpack_public_path__ + \"static/media/try-again.4f930231.gif\";","import React from \"react\";\r\nimport TryAgainLogo from \"../assets/images/try-again.gif\";\r\n\r\nconst GameOverlay = ({ onRestart, board }) => {\r\n  if (board.hasWon()) {\r\n    return <div className=\"title2048\"></div>;\r\n  } else if (board.hasLost()) {\r\n    return (\r\n      <div className=\"gameOver\" onClick={onRestart}>\r\n        <img\r\n          src={TryAgainLogo}\r\n          alt=\"Try Again\"\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n    return null;\r\n};\r\n\r\nexport default GameOverlay;\r\n","import React from \"react\";\r\n\r\nconst Tile = ({ tile }) => {\r\n  // 1. tile\r\n  // 2. tile#\r\n  // 3. position_#_#\r\n  // 4. row_from_#_to_#\r\n  // 5. col_from_#_to_#\r\n  // 6. isMoving\r\n  // 7. new\r\n  // 8. merged\r\n  \r\n  let classArray = [\"tile\"];\r\n  classArray.push(\"tile\" + tile.value);\r\n  if (!tile.mergedInto) {\r\n    classArray.push(`position_${tile.row}_${tile.column}`);\r\n  }\r\n\r\n  if (tile.mergedInto) {\r\n    classArray.push(\"merged\");\r\n  }\r\n\r\n  if (tile.isNew()) {\r\n    classArray.push(\"new\");\r\n  }\r\n\r\n  if (tile.hasMoved()) {\r\n    classArray.push(`row_from_${tile.fromRow()}_to_${tile.toRow()}`);\r\n    classArray.push(`column_from_${tile.fromColumn()}_to_${tile.toColumn()}`);\r\n    classArray.push(\"isMoving\");\r\n  }\r\n\r\n  let classes = classArray.join(\" \");\r\n  return <span className={classes}></span>;\r\n};\r\n\r\nexport default Tile;\r\n","import React, { useState } from \"react\";\r\nimport { Board } from \"../helper\";\r\nimport useEvent from \"../hooks/useEvent\";\r\nimport Cell from \"./Cell\";\r\nimport GameOverlay from \"./GameOverlay\";\r\nimport Tile from \"./Tile\";\r\n\r\nconst BoardView = () => {\r\n  const [board, setBoard] = useState(new Board());\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (board.hasWon()) {\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode >= 37 && event.keyCode <= 40) {\r\n      let direction = event.keyCode - 37;\r\n      let boardClone = Object.assign(\r\n        Object.create(Object.getPrototypeOf(board)),\r\n        board\r\n      );\r\n\r\n      let newBoard = boardClone.move(direction);\r\n      setBoard(newBoard);\r\n    }\r\n  };\r\n\r\n  useEvent(\"keydown\", handleKeyDown);\r\n\r\n  const resetGame = () => {\r\n    setBoard(new Board());\r\n  };\r\n\r\n  const cells = board.cells.map((row, rowIndex) => {\r\n    return (\r\n      <div key={rowIndex}>\r\n        {row.map((col, colIndex) => {\r\n          return <Cell key={rowIndex * board.size + colIndex} />;\r\n        })}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const tiles = board.tiles\r\n    .filter((tile) => tile.value !== 0)\r\n    .map((tile, index) => {\r\n      return <Tile key={index} tile={tile} />;\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"details-box\">\r\n        <div className=\"resetButton\" onClick={resetGame}>\r\n          New Game\r\n        </div>\r\n        <div className=\"score-box\">\r\n          <div className=\"score-header\">SCORE</div>\r\n          <div>{board.score}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"board\">\r\n        {cells}\r\n        {tiles}\r\n        <GameOverlay onRestart={resetGame} board={board} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardView;\r\n","import React from \"react\";\r\nimport BoardView from \"../components/Board\";\r\nimport \"../assets/scss/main.scss\";\r\nimport \"../assets/scss/styles.scss\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div className=\"container_2048\">\r\n      <BoardView />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useRef } from \"react\";\n\nexport default function Start({ setUsername }) {\n  const inputRef = useRef();\n\n  const handleClick = () => {\n    inputRef.current.value && setUsername(inputRef.current.value);\n  };\n\n  return (\n    <div className=\"start\">\n      <input\n        className=\"startInput\"\n        placeholder=\"enter your name\"\n        ref={inputRef}\n      />\n      <button className=\"startButton\" onClick={handleClick}>\n        Start\n      </button>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function Timer({ setTimeOut, questionNumber }) {\n  const [timer, setTimer] = useState(30);\n\n  useEffect(() => {\n    if (timer === 0) return setTimeOut(true);\n    const interval = setInterval(() => {\n      setTimer((prev) => prev - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [timer, setTimeOut]);\n\n  useEffect(() => {\n    setTimer(30);\n  }, [questionNumber]);\n  return timer;\n}\n","export default __webpack_public_path__ + \"static/media/play.8e5f6d1d.mp3\";","export default __webpack_public_path__ + \"static/media/correct.160572d7.mp3\";","export default __webpack_public_path__ + \"static/media/wrong.e9468218.mp3\";","import { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\";\nimport play from \"../sounds/play.mp3\";\nimport correct from \"../sounds/correct.mp3\";\nimport wrong from \"../sounds/wrong.mp3\";\n\nexport default function Trivia({\n  data,\n  questionNumber,\n  setQuestionNumber,\n  setTimeOut,\n}) {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [className, setClassName] = useState(\"answer\");\n  const [letsPlay] = useSound(play);\n  const [correctAnswer] = useSound(correct);\n  const [wrongAnswer] = useSound(wrong);\n\n  useEffect(() => {\n    letsPlay();\n  }, [letsPlay]);\n\n  useEffect(() => {\n    setQuestion(data[questionNumber - 1]);\n  }, [data, questionNumber]);\n\n  const delay = (duration, callback) => {\n    setTimeout(() => {\n      callback();\n    }, duration);\n  };\n\n  const handleClick = (a) => {\n    setSelectedAnswer(a);\n    setClassName(\"answer active\");\n    delay(3000, () => {\n      setClassName(a.correct ? \"answer correct\" : \"answer wrong\");\n    });\n    // setTimeout(() => {\n    //   setClassName(a.correct ? \"answer correct\" : \"answer wrong\");\n    // }, 3000);\n\n    // setTimeout(() => {\n      delay(5000, () => {\n      if (a.correct) {\n        correctAnswer();\n        delay(1000, () => {\n          setQuestionNumber((prev) => prev + 1);\n          setSelectedAnswer(null);\n        });\n        // setTimeout(() => {\n        //   setQuestionNumber((prev) => prev + 1);\n        //   setSelectedAnswer(null);\n        // }, 1000);\n      } else {\n        wrongAnswer();\n        delay(1000, () => {\n          setTimeOut(true);\n        });\n        // setTimeout(() => {\n        //   setTimeOut(true);\n        // }, 1000);\n      }\n    // }, 5000);\n      })\n  };\n  return (\n    <div className=\"trivia\">\n      <div className=\"question\">{question?.question}</div>\n      <div className=\"answers\">\n        {question?.answers.map((a) => (\n          <div\n            className={selectedAnswer === a ? className : \"answer\"}\n            onClick={() => !selectedAnswer && handleClick(a)}\n          >\n            {a.text}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\r\nimport Start from \"../components/Start\";\r\nimport Timer from \"../components/Timer\";\r\nimport Trivia from \"../components/Trivia\";\r\nimport \"../assets/css/main.css\";\r\n\r\nconst QuizTrivia = () => {\r\n  const [username, setUsername] = useState(null);\r\n  const [timeOut, setTimeOut] = useState(false);\r\n  const [questionNumber, setQuestionNumber] = useState(1);\r\n  const [earned, setEarned] = useState(\"$ 0\");\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      question: \"Rolex is a company that specializes in what type of product?\",\r\n      answers: [\r\n        {\r\n          text: \"Phone\",\r\n          correct: false,\r\n        },\r\n        {\r\n          text: \"Watches\",\r\n          correct: true,\r\n        },\r\n        {\r\n          text: \"Food\",\r\n          correct: false,\r\n        },\r\n        {\r\n          text: \"Cosmetic\",\r\n          correct: false,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"When did the website `Facebook` launch?\",\r\n      answers: [\r\n        {\r\n          text: \"2004\",\r\n          correct: true,\r\n        },\r\n        {\r\n          text: \"2005\",\r\n          correct: false,\r\n        },\r\n        {\r\n          text: \"2006\",\r\n          correct: false,\r\n        },\r\n        {\r\n          text: \"2007\",\r\n          correct: false,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"Who played the character of harry potter in movie?\",\r\n      answers: [\r\n        {\r\n          text: \"Johnny Deep\",\r\n          correct: false,\r\n        },\r\n        {\r\n          text: \"Leonardo Di Caprio\",\r\n          correct: false,\r\n        },\r\n        {\r\n          text: \"Denzel Washington\",\r\n          correct: false,\r\n        },\r\n        {\r\n          text: \"Daniel Red Cliff\",\r\n          correct: true,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const moneyPyramid = useMemo(\r\n    () =>\r\n      [\r\n        { id: 1, amount: \"$ 100\" },\r\n        { id: 2, amount: \"$ 200\" },\r\n        { id: 3, amount: \"$ 300\" },\r\n        { id: 4, amount: \"$ 500\" },\r\n        { id: 5, amount: \"$ 1.000\" },\r\n        { id: 6, amount: \"$ 2.000\" },\r\n        { id: 7, amount: \"$ 4.000\" },\r\n        { id: 8, amount: \"$ 8.000\" },\r\n        { id: 9, amount: \"$ 16.000\" },\r\n        { id: 10, amount: \"$ 32.000\" },\r\n        { id: 11, amount: \"$ 64.000\" },\r\n        { id: 12, amount: \"$ 125.000\" },\r\n        { id: 13, amount: \"$ 250.000\" },\r\n        { id: 14, amount: \"$ 500.000\" },\r\n        { id: 15, amount: \"$ 1.000.000\" },\r\n      ].reverse(),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    questionNumber > 1 &&\r\n      setEarned(moneyPyramid.find((m) => m.id === questionNumber - 1).amount);\r\n  }, [questionNumber, moneyPyramid]);\r\n  return (\r\n    <div className=\"app\">\r\n      {!username ? (\r\n        <Start setUsername={setUsername} />\r\n      ) : (\r\n        <>\r\n          <div className=\"main\">\r\n            {timeOut ? (\r\n              <h1 className=\"endText\">You earned: {earned}</h1>\r\n            ) : (\r\n              <>\r\n                <div className=\"top\">\r\n                  <div className=\"timer\">\r\n                    <Timer\r\n                      setTimeOut={setTimeOut}\r\n                      questionNumber={questionNumber}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                  <Trivia\r\n                    data={data}\r\n                    questionNumber={questionNumber}\r\n                    setQuestionNumber={setQuestionNumber}\r\n                    setTimeOut={setTimeOut}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"pyramid\">\r\n            <ul className=\"moneyList\">\r\n              {moneyPyramid.map((m) => (\r\n                <li\r\n                  className={\r\n                    questionNumber === m.id\r\n                      ? \"moneyListItem active\"\r\n                      : \"moneyListItem\"\r\n                  }\r\n                >\r\n                  <span className=\"moneyListItemNumber\">{m.id}</span>\r\n                  <span className=\"moneyListItemAmount\">{m.amount}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizTrivia;\r\n","import React from \"react\";\r\nimport { useRoutes } from \"react-router-dom\";\r\nimport MainLayout from \"./layouts/MainLayout\";\r\nimport MainPage from \"./modules/2048/pages/MainPage\";\r\nimport QuizTrivia from \"./modules/quiz-trivia/pages/QuizTrivia\";\r\n\r\nconst Router = () => {\r\n  let element = useRoutes([\r\n    // {\r\n    //   path: \"app\",\r\n    //   element: <MainLayout />,\r\n    //   children: [\r\n    // { path: \"/\", element: <MainLayout /> },\r\n    //   ],\r\n    // },\r\n\r\n    { path: \"/\", element: <MainLayout /> },\r\n    { path: \"/quiz\", element: <QuizTrivia /> },\r\n    { path: \"/2048-animated\", element: <MainPage /> },\r\n  ]);\r\n  return element;\r\n};\r\n\r\nexport default Router;\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Router from \"./routes\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/react-games\">\n      <Router />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}